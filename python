from math import *
phrase = "Giraffe Academy"
#print(phrase.replace("Giraffe", "Elephant"))
#print(phrase.index("Academy"))
#print(-2.0876)
#print(3 + 4.5)
#print(3 * 4 + 5)
#print(3 * (4 + 5))
#print(10 % 3)
my_num = 5
#print(str(my_num) + " my favourite number")
my_num = -5
#print(abs(my_num))
#print(pow(3, 2))
#print(max(4, 6))
#print(min(4, 6))
#print(round(3.2))
#print(floor(3.7))
#print(ceil(3.7))
#print(sqrt(36))
#name = input("Enter your name: ")
#age = input("Enter your age: ")
#print("Hello " + name + "! You are " + age)
#num1 = input("Enter a number: ")
#num2 = input("Enter another number: ")
#result = int(num1) + int(num2)
#print(result)
#result = float(num1) + float(num2)
#print(result)
#colour = input("Enter a colour")
#plural_noun = input("Enter a Plural Noun")
#celebrity = input("Enter a celebrity")

#print("Roses are " + colour)
#print(plural_noun + " are blue")
#print("I love " + celebrity)

#friends = ["Kevin", "Karen", "Jim", "Oscar", "Toby"]
#friends[1] = "Mike"
#print(friends[1:3])

#List Functions
#lucky_numbers = [4, 8, 15, 16, 23, 42]
#friends = ["Kevin", "Karen", "Karen", "Jim", "Oscar", "Toby"]
#friends.sort()
#print(friends)
#lucky_numbers.sort()
#print(lucky_numbers)
#lucky_numbers.reverse()
#print(lucky_numbers)
#friends.extend(lucky_numbers)
#friends.append("Creed")
#friends.insert(1, "Kelly")
#friends.remove("Jim")
#friends.pop()
#print(friends)
#print(friends.index("Kevin"))
#print(friends.count("Karen"))
#friends2 = friends.copy()
#print(friends2)
#friends.clear()
#print(friends)

#Tuples type of data structure, similar to a list. 
#immutable, cant be changed or modified, constant final value
#coordinates = [(4, 5), (6,7), (80, 34)]
#print(coordinates[0])

#Functions
#needs to be indented
#def say_hi(name, age):
#    print("Hello " + name + ", You are " + str(age))
    
#say_hi("Mike", "35")
#say_hi("Steve", "30")

#return statement
#returns information from a Function
#def cube(num):
#    return num*num*num
    
#print(cube(3))
#result = cube(4)
#print(result)

#If statements
#is_male = True
#is_tall = False

#can also use or
#if is_male and is_tall:
#    print("You are a male and tall")
#elif is_male and not(is_tall):
#    print("You are a short male")
#elif not(is_male) and is_tall:
#    print("You are not a male but are tall")
#else:
#    print("You are not a male or tall")

#If statements and comparisons
# ==, !=
#def max_num(num1, num2, num3):
#    if num1 >= num2 and num1 >= num3:
#        return num1
#    elif num2 >= num1 and num2 >= num3:
#        return num2
#    else:
#        return num3
        
#print(max_num(300, 40, 5))

#Building a better calculator
#num1 = float(input("Enter first number: "))
#op = input("Enter operator: ")
#num2 = float(input("Enter second number: "))

#if op == "+":
#    print(num1 + num2)
#elif op == "-":
#    print(num1 - num2)
#elif op == "/":
#    print(num1 / num2)
#elif op == "*":
#    print(num1 * num2)
#else:
#    print("Invalid operator")
    
#Dictionaries
monthConversions = {
    "Jan": "January",
    "Feb": "February",
    "Mar": "March",
    "Apr": "April",
    "May": "May",
    "Jun": "June",
    "Jul": "July",
    "Aug": "August",
    "Sep": "September",
    "Oct": "October",
    "Nov": "November",
    "Dec": "December",
}

#print(monthConversions["Nov"])
#print(monthConversions.get("Dec"))
#print(monthConversions.get("Luv", "Not a valid Key"))

#While loop
#i = 1
#while i <= 10:
#    print(i)
#    i += 1
#print("Done with loop")

#Building a guessing game    
secret_word = "giraffe"
guess = ""
guess_count = 0
guess_limit = 3
out_of_guesses = False

#while guess != secret_word and not(out_of_guesses):
#    if guess_count < guess_limit:
#        guess = input("Enter guess: ")
#        guess_count += 1
#    else:
#        out_of_guesses = True

#if out_of_guesses:
#    print("Out of Guesses, YOU LOSE!")
#else:
#    print("You win!")

#For loop
friends = ["Jim", "Karen", "Kevin"]
#for index in range(len(friends)): 
#    print(friends[index])
#for index in range(10): 
#    print(index)
#for index in range(3, 10): 
#    print(index)
#for friend in friends: #friend, word after for can be any random name
#    print (friend)
#for index in range(5): 
#    if index == 0:
#        print("first iteration")
#    else:
#        print("Not first")

#Exponent Function
#def raise_to_power(base_num, pow_num):
#    result = 1
#    for index in range(pow_num):
#        result = result * base_num
#    return result
    
#print(raise_to_power(3, 4))

#2D lists and nested loops
number_grid = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
    [0]
]

#print(number_grid[2][1])

#for row in number_grid:
#    for col in row:
#        print(col)
